const ethers = require('ethers')

module.exports = decodeTxReturn

function decode (tx, output) {
  var type = output.type || output
  if (type.includes('int')) return tx.toString()
  if (type === ('bytes32')) return ethers.utils.parseBytes32String(tx)
  else return tx
}

function decodeTxReturn (tx, types) {
  var result
  if (Array.isArray(tx)) {  // recursive case
    result = tx.map((x, i) => decodeTxReturn(x,getTypes(types, i)))
    return result
  } else { // atomic case
    result = decode(tx, types)
    return result
  }
}

function getTypes (types, i) {
  if (Array.isArray(types)) return types[i]
  if (types.components) return types.components
  return types
}

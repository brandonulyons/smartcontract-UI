var inputContainer = require("input-container")
var inputAddress = require("input-address")
var inputArray = require("input-array")
var inputInteger = require("input-integer")
var inputBoolean = require("input-boolean")
var inputString = require("input-string")

module.exports = inputUI

function inputUI ({ name, theme, type }) {
  var field
  if ((type.search(/\buint/) != -1) || (type.search(/\bint/) != -1)) {
    field = inputInteger({ theme, type })
    return displayRightField({ name, theme, type, field })
  }
  if (type.search(/\bbyte/) != -1) {
    field = inputString({ theme, type })
    return displayRightField({ name, theme, type, field })
  }
  if (type.search(/\bstring/) != -1) {
    field = inputString({ theme, type })
    return displayRightField({ name, theme, type, field })
  }
  if (type.search(/\bfixed/) != -1) {
    field = inputInteger({ theme, type })
    return displayRightField({ name, theme, type, field })
  }
  if (type.search(/\bbool/) != -1) {
    field = inputBoolean({ theme, type })
    return displayRightField({ name, theme, type, field })
  }
  if (type.search(/\baddress/) != -1) {
    field = inputAddress({ theme, type })
    return displayRightField({ name, theme, type, field })
  }

  function displayRightField ({ name, theme, type, field }) {
    var input
    if ((type.search(/\b]/i) != -1)) {
      var arrayInfo = type.split('[')[1]
      var digit = arrayInfo.search(/\d/)
      input = inputArray({ theme, type })
      return inputContainer({ name, theme, type, input})
    } else {
      input = field
      return inputContainer({ name, theme, type, input})
    }
  }

}

const bel = require("bel")
const date = require('getDate')
const shortenHexData = require('shortenHexData')
const copy = require('copy-text-to-clipboard')
const moreInfo = require('moreInfo')
const decodeTxData = require('decodeTxData')
const decodeTxReturn = require('decodeTxReturn')

module.exports = makeReturn

async function makeReturn (css, contract, solcMetadata, provider, transaction, fnName) {
  var types = returnTypes(solcMetadata.output.abi, fnName)
  var decodedTx
  var data
  var opts
  var el = bel`<div class=${css.txReturnItem}></div>`
  var opts = { contract, fnName, solcMetadata}
  if (transaction.hash) {  // nonpayable and payable
    opts.receipt = await transaction.wait()
    opts.data = transaction.data
    opts.tag = 'input'
    data = decodeTxData(opts)
    el.appendChild(moreInfo(provider._network.name, transaction.hash))
  } else { // view and pure
    opts.transaction = transaction
    opts.tag = 'output'
    data = decodeTxData(opts)
  }
  el.appendChild(makeTxOutput(css, data))
  return el
}

function makeTxOutput (css, data) {
  return bel`
    <div class=${css.txReceipt}>
        <div class=${css.txReturnField}>
          <div class=${css.txReturnValue}>${JSON.stringify(data, null, 2)}</div>
        </div>
    </div>`
}

function returnTypes (abi, fnName) {
  item = []
  for (var i = 0; i < abi.length; i++) {
    let item = abi[i]
    if (item.name === fnName) return item.outputs
  }
}

function makeTxReceipt (css, transaction, receipt, fnName, solcMetadata) {
  var txData = JSON.stringify(decodeTxData(transaction.data, fnName, solcMetadata), null, 2)
  return bel`
  <div class=${css.txReceipt}>
      <div class=${css.txReturnField}>
        <div class=${css.txReturnTitle}>status</div>
        <div class=${css.txReturnValue}>${receipt.status === 1 ? 'success' : 'failed'}</div>
      </div>
      <div class=${css.txReturnField}>
        <div class=${css.txReturnTitle}>timestamp</div>
        <div class=${css.txReturnValue}>${date()}</div>
      </div>
      <div class=${css.txReturnField}>
        <div class=${css.txReturnTitle}>sent data</div>
        <div class=${css.txReturnValue} onclick=${()=>copy(txData)}>${txData}</div>
      </div>
      <div class=${css.txReturnField}>
        <div class=${css.txReturnTitle}>transaction address</div>
        <div class=${css.txReturnValue} onclick=${()=>copy(receipt.transactionHash)}>${shortenHexData(receipt.transactionHash)}</div>
      </div>
      <div class=${css.txReturnField} onclick=${()=>copy(receipt.from)}>
        <div class=${css.txReturnTitle}>signed by</div>
        <div class=${css.txReturnValue} onclick=${()=>copy(receipt.from)}>${shortenHexData(receipt.from)}</div>
      </div>
  </div>`
}
